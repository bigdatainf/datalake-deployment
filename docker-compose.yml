version: "3"
volumes:
    airflow-data:
    nifi-database_repository:
    nifi-flowfile_repository:
    nifi-content_repository:
    nifi-provenance_repository:
    nifi-state:
    nifi-conf:
    postgres:
    pgadmin:

networks:
    datalake:
        name: datalake_network

services:

    zookeeper:
        container_name: zookeeper
        image: 'bitnami/zookeeper:3.8.1'
        environment:
            - ALLOW_ANONYMOUS_LOGIN=yes
        networks:
            - datalake

    nifi:
        container_name: nifi
        image: 'apache/nifi:1.21.0'
        ports:
            - '8091:8080'
        networks:
            - datalake
        volumes:
            - nifi-database_repository:/opt/nifi/nifi-current/database_repository
            - nifi-flowfile_repository:/opt/nifi/nifi-current/flowfile_repository
            - nifi-content_repository:/opt/nifi/nifi-current/content_repository
            - nifi-provenance_repository:/opt/nifi/nifi-current/provenance_repository
            - nifi-conf:/opt/nifi/nifi-current/conf
            - nifi-state:/opt/nifi/nifi-current/state
            - ./data/nifi_logs:/opt/nifi/nifi-current/logs
            - ./data/nifi_jdbc:/opt/nifi/nifi-current/jdbc
            - ./data/nifi_credentials:/opt/nifi/nifi-current/credentials
        environment:
            - NIFI_WEB_HTTP_PORT=8080
            - NIFI_CLUSTER_IS_NODE=true
            - NIFI_CLUSTER_NODE_PROTOCOL_PORT=8082
            - NIFI_ZK_CONNECT_STRING=zookeeper:2181
            - NIFI_ELECTION_MAX_WAIT=30 sec
            - NIFI_SENSITIVE_PROPS_KEY='12345678901234567890A'
        

    registry:
        container_name: registry
        image: 'apache/nifi-registry:1.21.0' 
        restart: on-failure
        ports:
            - "18080:18080"
        environment:
            - LOG_LEVEL=INFO
            - NIFI_REGISTRY_DB_DIR=/opt/nifi-registry/nifi-registry-current/database
            - NIFI_REGISTRY_FLOW_PROVIDER=file
            - NIFI_REGISTRY_FLOW_STORAGE_DIR=/opt/nifi-registry/nifi-registry-current/flow_storage
        volumes:
            - ./data/nifi_registry/database:/opt/nifi-registry/nifi-registry-current/database
            - ./data/nifi_registry/flow_storage:/opt/nifi-registry/nifi-registry-current/flow_storage
        networks:
            - datalake

    postgres:
        container_name: postgres
        image: 'postgres:15-alpine'
        environment:
            POSTGRES_USER: 'postgres'
            POSTGRES_PASSWORD: 'postgres'
            PGDATA: /data/postgres
        volumes:
            - postgres:/data/postgres
        ports:
            - "5432:5432"
        networks:
            - datalake
        healthcheck:
          test: ["CMD", "pg_isready", "-U", "postgres"]
          interval: 10s
          retries: 5
          start_period: 5s
        restart: always

    pgadmin:
        container_name: pgadmin
        image: 'dpage/pgadmin4:7.1'
        environment:
            PGADMIN_DEFAULT_EMAIL: 'pgadmin4@pgadmin.org'
            PGADMIN_DEFAULT_PASSWORD: 'admin'
            PGADMIN_CONFIG_SERVER_MODE: 'False'
        volumes:
            - pgadmin:/var/lib/pgadmin
        ports:
            - "5050:80"
        networks:
            - datalake

    minio:
        container_name: minio
        image: 'bitnami/minio:2023' 
        environment:
            MINIO_ROOT_USER: minio_admin
            MINIO_ROOT_PASSWORD: minio_password
        ports:
            - '9000:9000'
            - '9001:9001'
        volumes:
            - './data/minio_data:/data'
        networks:
            - datalake



